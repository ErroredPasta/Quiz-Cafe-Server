name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build with Gradle Wrapper
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # Build Docker Image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test .

      # Docker Hub Login (for pushing images)
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Push Docker Image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      # Pull Docker image from Docker Hub
      - name: Docker Pull
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test

      # Stop any running containers with the same name
      - name: Docker stop container
        run: |
          if [ $(sudo docker ps -a -q -f name=spring-cicd-test) ]; then
            sudo docker stop spring-cicd-test
          fi

      # Run the new Docker container with environment variables
      - name: Docker Run New Container
        run: |
          sudo docker run --rm -it -d -p 80:8080 \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e JWT_EXPIRATION="${{ secrets.JWT_EXPIRATION }}" \
            -e MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}" \
            -e MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}" \
            -e DB_URL="${{ secrets.DB_URL }}" \
            -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e SERVER_PORT="${{ secrets.SERVER_PORT }}" \
            --name spring-cicd-test ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test

      # Remove old Docker images to free space
      - name: Clean up old Docker images
        run: sudo docker system prune -f
