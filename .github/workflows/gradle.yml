name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      # Gradle 캐시 설정
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # ✅ 테스트 포함 빌드
      - name: Build with Gradle Wrapper (with test)
        run: ./gradlew build --info --stacktrace

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/quiz-cafe-server .

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/quiz-cafe-server

  run-docker-image-on-ec2:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Docker pull image
        run: |
          echo "Pulling Docker image from Docker Hub..."
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/quiz-cafe-server

      - name: Stop old container if exists
        run: |
          echo "Checking for old containers..."
          if [ "$(sudo docker ps -a -q -f name=quiz-cafe-server)" ]; then
            echo "Stopping old container..."
            sudo docker stop quiz-cafe-server
            echo "Removing old container..."
            sudo docker rm quiz-cafe-server
          else
            echo "No old container found"
          fi

      - name: Run new container with env
        run: |
          echo "Running new container..."
          sudo docker run -d -p 80:8080 \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e JWT_EXPIRATION="${{ secrets.JWT_EXPIRATION }}" \
            -e MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}" \
            -e MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}" \
            -e DB_URL="${{ secrets.DB_URL }}" \
            -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e SERVER_PORT="${{ secrets.SERVER_PORT }}" \
            --name quiz-cafe-server ${{ secrets.DOCKERHUB_USERNAME }}/quiz-cafe-server
          echo "Docker container running"

      - name: Remove unused Docker images
        run: |
          echo "Cleaning up unused Docker images..."
          sudo docker system prune -f
